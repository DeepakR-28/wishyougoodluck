{"version":3,"sources":["Components/Wishes/Wishes.js","App.js","reportWebVitals.js","index.js","Components/Wishes/Wishes.module.css"],"names":["Wishes","useState","wishId","setWishId","fromCandidate","setCandidate","useHarperDB","query","operation","sql","data","loading","error","console","log","length","className","classes","Container","studentButton","onClick","wishNum","Math","floor","random","studentWishIdHandler","candidateButton","candidateWishIdHandler","Wish","student_wishes","candidate_wishes","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","url","process","user","password","document","getElementById","module","exports"],"mappings":"6OAqDeA,EAjDA,WAEX,MAA4BC,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAqCF,oBAAS,GAA9C,mBAAOG,EAAP,KAAqBC,EAArB,KAEA,EAAmCC,sBAAY,CAC3CC,MAAQ,CACJC,UAAY,MACZC,IAAM,kCAHd,mBAAKC,EAAL,KAAUC,EAAV,KAAkBC,EAAlB,UAmBA,OAAGD,EACQ,8CAERC,GACCC,QAAQC,IAAI,UAAYF,GAEzBF,GAAQA,EAAKK,OAAO,EAEf,sBAAKC,UAAYC,IAAQC,UAAzB,UAEI,wBAAQF,UAAaC,IAAQE,cAAeC,QAAU,kBArBrC,WACzB,IAAIC,EAAUC,KAAKC,MAAsB,GAAhBD,KAAKE,UAC9BrB,EAAUkB,GACVhB,GAAa,GAkBuDoB,IAA5D,+BACA,wBAAQT,UAAaC,IAAQS,gBAAiBN,QAAU,kBAjBrC,WAC3B,IAAIC,EAAUC,KAAKC,MAAsB,GAAhBD,KAAKE,UAC9BrB,EAAUkB,GACVhB,GAAa,GAcyDsB,IAA9D,oCACA,uBACA,uBACA,uBACA,uBACA,oBAAIX,UAAaC,IAAQW,KAAzB,SAAgCxB,EAAgBM,EAAKR,GAAQ2B,eAAiBnB,EAAKR,GAAQ4B,sBAK5F,8BAAMlB,MCnCNmB,MATf,WACE,OACE,sBAAKf,UAAU,MAAf,UACE,4IACA,cAAC,EAAD,QCGSgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,mBAAD,CAAkBC,IAAMC,8CAA2BC,KAAQD,cAAgCE,SAAWF,eAAtG,SACE,cAAC,EAAD,QAGJG,SAASC,eAAe,SAM1BjB,K,kBCrBAkB,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,gBAAkB,gCAAgC,KAAO,wB","file":"static/js/main.d0186675.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport {useHarperDB} from 'use-harperdb'\r\n\r\nimport classes from './Wishes.module.css'\r\nconst Wishes = () =>{\r\n\r\n    const [wishId, setWishId] = useState(0)\r\n    const [fromCandidate,setCandidate] = useState(true)\r\n// eslint-disable-next-line\r\n    let [data,loading,error,refresh] = useHarperDB({\r\n        query : {\r\n            operation : 'sql',\r\n            sql : 'select * from project.wishes'\r\n        },\r\n        // interval : \r\n    })\r\n    \r\n    const studentWishIdHandler = () => {\r\n        let wishNum = Math.floor(Math.random() * 30);\r\n        setWishId(wishNum)\r\n        setCandidate(true)\r\n    }\r\n    const candidateWishIdHandler = () => {\r\n        let wishNum = Math.floor(Math.random() * 30);\r\n        setWishId(wishNum)\r\n        setCandidate(false)\r\n    }\r\n    \r\n    if(loading){\r\n        return <div>Loading...</div>\r\n    }\r\n    if(error){\r\n        console.log('[error]' + error)\r\n    }\r\n    if(data && data.length>0){\r\n        return(\r\n            <div className ={classes.Container}>\r\n                \r\n                <button className = {classes.studentButton} onClick ={() => studentWishIdHandler()}>Exam üìù</button>\r\n                <button className = {classes.candidateButton} onClick ={() => candidateWishIdHandler()}>Interview üíº</button>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <h2 className = {classes.Wish}>{fromCandidate ? data[wishId].student_wishes : data[wishId].candidate_wishes}</h2>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return <div>{error}</div>\r\n    }\r\n}\r\n\r\nexport default Wishes\r\n\r\n\r\n/*\r\n  if(loading){\r\n        return <div>Loading...</div>\r\n    }\r\n    if(data && data.length>0){\r\n        return(\r\n            <div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <id>Wish Id</id>\r\n                        <td>wishes for students</td>\r\n                        <td>Wishes for candidates</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map((wish,index) =>{\r\n                        return(\r\n                            <tr>\r\n                                <td>{wish.id}</td>\r\n                                <td>{wish.student_wishes}</td>\r\n                                <td>{wish.candidate_wishes}</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <button onClick = {refresh}>Refresh</button>\r\n        </div>\r\n        )\r\n    }\r\n    else{\r\n        return <div>{error}</div>\r\n    }\r\n\r\n\r\n*/","import React from 'react'\n\nimport './App.css';\nimport Wishes from './Components/Wishes/Wishes'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>YOUV'E SURVIVED üíØ% OF YOUR BAD üòû DAYS, JUST HANG IN THERE üëë üí™ </h1>\n      <Wishes />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HarperDBProvider} from 'use-harperdb'\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HarperDBProvider url ={process.env.REACT_APP_URL} user = {process.env.REACT_APP_USERNAME} password ={process.env.REACT_APP_PASSWORD}>\n      <App />\n    </HarperDBProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"studentButton\":\"Wishes_studentButton__2FFSD\",\"candidateButton\":\"Wishes_candidateButton__9qjii\",\"Wish\":\"Wishes_Wish__32OKP\"};"],"sourceRoot":""}